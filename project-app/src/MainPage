import React from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';

const MainPage = () => {
  // Hardcoded JSON data with angle and acceleration values
  // Simulating a sinusoidal relationship for realistic physics data
  const data = [
    { angle: 0, acceleration: 0 },
    { angle: 10, acceleration: 1.74 },
    { angle: 20, acceleration: 3.42 },
    { angle: 30, acceleration: 5.00 },
    { angle: 40, acceleration: 6.43 },
    { angle: 50, acceleration: 7.66 },
    { angle: 60, acceleration: 8.66 },
    { angle: 70, acceleration: 9.40 },
    { angle: 80, acceleration: 9.85 },
    { angle: 90, acceleration: 10.00 },
    { angle: 100, acceleration: 9.85 },
    { angle: 110, acceleration: 9.40 },
    { angle: 120, acceleration: 8.66 },
    { angle: 130, acceleration: 7.66 },
    { angle: 140, acceleration: 6.43 },
    { angle: 150, acceleration: 5.00 },
    { angle: 160, acceleration: 3.42 },
    { angle: 170, acceleration: 1.74 },
    { angle: 180, acceleration: 0 },
    { angle: 190, acceleration: -1.74 },
    { angle: 200, acceleration: -3.42 },
    { angle: 210, acceleration: -5.00 },
    { angle: 220, acceleration: -6.43 },
    { angle: 230, acceleration: -7.66 },
    { angle: 240, acceleration: -8.66 },
    { angle: 250, acceleration: -9.40 },
    { angle: 260, acceleration: -9.85 },
    { angle: 270, acceleration: -10.00 },
    { angle: 280, acceleration: -9.85 },
    { angle: 290, acceleration: -9.40 },
    { angle: 300, acceleration: -8.66 },
    { angle: 310, acceleration: -7.66 },
    { angle: 320, acceleration: -6.43 },
    { angle: 330, acceleration: -5.00 },
    { angle: 340, acceleration: -3.42 },
    { angle: 350, acceleration: -1.74 },
    { angle: 360, acceleration: 0 }
  ];

  return (
    <div className="w-full h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-800 mb-2 text-center">
          Acceleration vs Angle Analysis
        </h1>
        <p className="text-gray-600 mb-8 text-center">
          Graph showing the relationship between angle (°) and acceleration (m/s²)
        </p>
        
        <div className="bg-white rounded-lg shadow-lg p-6">
          <ResponsiveContainer width="100%" height={500}>
            <LineChart
              data={data}
              margin={{
                top: 20,
                right: 30,
                left: 20,
                bottom: 60
              }}
            >
              <CartesianGrid strokeDasharray="3 3" stroke="#e0e0e0" />
              <XAxis 
                dataKey="acceleration" 
                type="number"
                domain={[-12, 12]}
                label={{ 
                  value: 'Acceleration (m/s²)', 
                  position: 'insideBottom', 
                  offset: -10,
                  style: { textAnchor: 'middle' }
                }}
                stroke="#666"
              />
              <YAxis 
                dataKey="angle"
                type="number" 
                domain={[0, 360]}
                label={{ 
                  value: 'Angle (°)', 
                  angle: -90, 
                  position: 'insideLeft',
                  style: { textAnchor: 'middle' }
                }}
                stroke="#666"
              />
              <Tooltip 
                formatter={(value, name) => [
                  `${value}${name === 'acceleration' ? ' m/s²' : '°'}`, 
                  name === 'acceleration' ? 'Acceleration' : 'Angle'
                ]}
                labelFormatter={(label) => `Acceleration: ${label} m/s²`}
                contentStyle={{
                  backgroundColor: 'rgba(255, 255, 255, 0.95)',
                  border: '1px solid #ccc',
                  borderRadius: '4px'
                }}
              />
              <Legend 
                wrapperStyle={{ paddingTop: '20px' }}
              />
              <Line 
                type="monotone" 
                dataKey="angle" 
                stroke="#2563eb" 
                strokeWidth={2}
                dot={{ fill: '#2563eb', strokeWidth: 1, r: 3 }}
                activeDot={{ r: 5, fill: '#1d4ed8' }}
                name="Angle"
              />
            </LineChart>
          </ResponsiveContainer>
        </div>
        
        <div className="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h3 className="font-semibold text-blue-800 mb-2">Data Summary</h3>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-blue-700">
            <div>
              <span className="font-medium">Total Points:</span> {data.length}
            </div>
            <div>
              <span className="font-medium">Angle Range:</span> 0° - 360°
            </div>
            <div>
              <span className="font-medium">Max Acceleration:</span> {Math.max(...data.map(d => d.acceleration))} m/s²
            </div>
            <div>
              <span className="font-medium">Min Acceleration:</span> {Math.min(...data.map(d => d.acceleration))} m/s²
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MainPage;